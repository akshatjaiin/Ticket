from google.generativeai.types import ToolType

# Wrap your functions into ToolType instances
booking_system = [
    ToolType(
        name="add_booking",
        function=add_booking,
        parameters={"name": {"type": "string"}, "age": {"type": "integer"}, "gender": {"type": "string"}, "nationality": {"type": "string"}},
        description="Add a booking for a visitor."
    ),
    ToolType(
        name="get_booking",
        function=get_booking,
        description="Retrieve the current bookings."
    ),
    ToolType(
        name="remove_booking",
        function=remove_booking,
        parameters={"n": {"type": "integer"}},
        description="Remove a specific booking by index."
    ),
    ToolType(
        name="clear_booking",
        function=clear_booking,
        description="Clear all current bookings."
    ),
    ToolType(
        name="calculate_price",
        function=calculate_price,
        parameters={"visitor": {"type": "object"}},
        description="Calculate ticket price based on visitor details."
    ),
    ToolType(
        name="confirm_booking",
        function=confirm_booking,
        description="Confirm current bookings."
    ),
    ToolType(
        name="finalize_booking",
        function=finalize_booking,
        description="Finalize the booking and return estimated processing time."
    )
]

# Model initialization remains the same
if use_sys_inst:
    model = genai.GenerativeModel(
        model_name, tools=booking_system, system_instruction=MUSEUM_BOT_PROMPT)
    convo = model.start_chat(enable_automatic_function_calling=True)
else:
    model = genai.GenerativeModel(model_name, tools=booking_system)
    convo = model.start_chat(
        history=[
            {'role': 'system', 'parts': [MUSEUM_BOT_PROMPT]},
            {'role': 'model', 'parts': ['OK I understand. I will do my best!']}
        ],
        enable_automatic_function_calling=True
    )

@retry.Retry(initial=30)
def send_message(message):
    return convo.send_message(message)

print('Welcome to MUSEUM bot!\n\n')
confirmed_booking = []
while not confirmed_booking:
    response = send_message(input('> '))
    print(response.text)
